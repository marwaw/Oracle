DECLARE
  NR_MYSZ BINARY_INTEGER := 0;
  SREDNIE_MIES_SPOZ NUMBER;
  ILE_MIESIECZNIE_RAZEM NUMBER;
  DZIEN DATE := '2004-01-01';

  --TABELA PRZECHOWUJĄCA WYGENEROWANE MYSZY
  TYPE MYSZY_T IS TABLE OF MYSZY%ROWTYPE;
  MYSZY_TABELA MYSZY_T := MYSZY_T();

  --TABELA ZAWIERAJĄCA OSTATNIE ŚRODY KAŻDEGO MIESIĄCA
  TYPE OSTATNIE_SRODY_T IS TABLE OF DATE;
  OSTATNIE_SRODY OSTATNIE_SRODY_T := OSTATNIE_SRODY_T();

  --TABELA ZAWIERAJĄCA PSEUDONIMY KOTÓW
  TYPE PSEUDO_T IS TABLE OF KOCURY.PSEUDO%TYPE;
  KOTY_W_STADZIE PSEUDO_T;

  --TABELA ZAWIERAJACA DATY WSTAPIENIA KOTÓW
  TYPE WSTAP_T IS TABLE OF KOCURY.W_STADKU_OD%TYPE;
  DATA_WSTAP WSTAP_T;

  --ILE MYSZY ZJADA KOT
  TYPE ILE_MYSZY_T IS TABLE OF NUMBER;
  ILE_MYSZY ILE_MYSZY_T;

  POPRZEDNIA_SRODA DATE DEFAULT '2004-01-01';
  PIERWSZA_MYSZ NUMBER DEFAULT 1;
  OSTATNIA_MYSZ NUMBER DEFAULT 0;
  PIERWSZA_WOLNA NUMBER DEFAULT 1;

  FUNCTION ZNAJDZ_DATE_WYD(DATA_ZLOW DATE) RETURN DATE IS
    OSTATNIA_SRODA DATE;
    BEGIN
      OSTATNIA_SRODA := NEXT_DAY(LAST_DAY(DATA_ZLOW) - 7, 'ŚRODA');
      IF OSTATNIA_SRODA < DATA_ZLOW THEN
        OSTATNIA_SRODA := NEXT_DAY(LAST_DAY(ADD_MONTHS(DATA_ZLOW, 1)) - 7 , 'ŚRODA');
      END IF;

      RETURN OSTATNIA_SRODA;
    END;

  PROCEDURE ZAPISZ_ZMIANY
  IS
  BEGIN
    FORALL nr IN 1..MYSZY_TABELA.COUNT
      INSERT INTO MYSZY VALUES MYSZY_TABELA(nr);
    MYSZY_TABELA.DELETE();
    KOTY_W_STADZIE.DELETE();
    NR_MYSZ := 0;
    COMMIT;
  END zapisz_zmiany;


BEGIN
  WHILE DZIEN < '2018-01-09'
  LOOP
    OSTATNIE_SRODY.extend;
    OSTATNIE_SRODY(OSTATNIE_SRODY.COUNT) := ZNAJDZ_DATE_WYD(DZIEN);
    DZIEN := ADD_MONTHS(DZIEN,1);
  END LOOP;

  FOR I IN 1..OSTATNIE_SRODY.COUNT
  LOOP

    SELECT PSEUDO, NVL(PRZYDZIAL_MYSZY,0) + NVL(MYSZY_EXTRA,0), W_STADKU_OD
    BULK COLLECT INTO KOTY_W_STADZIE, ILE_MYSZY, DATA_WSTAP
    FROM KOCURY
    WHERE W_STADKU_OD < OSTATNIE_SRODY(I);

    SELECT CEIL(AVG(NVL(PRZYDZIAL_MYSZY,0) + NVL(MYSZY_EXTRA,0))), SUM(NVL(PRZYDZIAL_MYSZY,0) + NVL(MYSZY_EXTRA,0))
    INTO SREDNIE_MIES_SPOZ, ILE_MIESIECZNIE_RAZEM
    FROM KOCURY
    WHERE W_STADKU_OD < OSTATNIE_SRODY(I);

    FOR MYSZ IN 1..ILE_MIESIECZNIE_RAZEM
    LOOP
        NR_MYSZ := NR_MYSZ +1;
        MYSZY_TABELA.EXTEND();
        MYSZY_TABELA(NR_MYSZ).NR_MYSZY := NR_MYSZ;
        MYSZY_TABELA(NR_MYSZ).WAGA_MYSZY := DBMS_RANDOM.VALUE(15,25);
        MYSZY_TABELA(NR_MYSZ).DATA_WYDANIA := OSTATNIE_SRODY(I);
    END LOOP;

    PIERWSZA_WOLNA := PIERWSZA_MYSZ;
    FOR KOT IN 1..KOTY_W_STADZIE.LAST
    LOOP
      PIERWSZA_MYSZ := OSTATNIA_MYSZ + 1;
      OSTATNIA_MYSZ := PIERWSZA_MYSZ + SREDNIE_MIES_SPOZ;

      IF OSTATNIA_MYSZ > MYSZY_TABELA.LAST THEN OSTATNIA_MYSZ := MYSZY_TABELA.LAST;
        END IF;

      FOR MYSZ IN PIERWSZA_MYSZ..OSTATNIA_MYSZ
      LOOP
        MYSZY_TABELA(MYSZ).LOWCA := KOTY_W_STADZIE(KOT);
        MYSZY_TABELA(MYSZ).DATA_ZLOWIENIA := POPRZEDNIA_SRODA + DBMS_RANDOM.VALUE(1, 28);
      END LOOP;
    END LOOP;

    FOR KOT IN 1..KOTY_W_STADZIE.LAST
    LOOP
      PIERWSZA_MYSZ := PIERWSZA_WOLNA;
      OSTATNIA_MYSZ := PIERWSZA_MYSZ + ILE_MYSZY(KOT);
      PIERWSZA_WOLNA := OSTATNIA_MYSZ + 1;

      IF OSTATNIA_MYSZ > MYSZY_TABELA.LAST THEN OSTATNIA_MYSZ := MYSZY_TABELA.LAST;
        END IF;

      FOR MYSZ IN PIERWSZA_MYSZ..OSTATNIA_MYSZ
      LOOP
        MYSZY_TABELA(MYSZ).ZJADACZ := KOTY_W_STADZIE(KOT);
      END LOOP;
    END LOOP;

    PIERWSZA_MYSZ := MYSZY_TABELA.LAST;
    OSTATNIA_MYSZ := MYSZY_TABELA.LAST;
    PIERWSZA_WOLNA := MYSZY_TABELA.LAST + 1;

  END LOOP;
  ZAPISZ_ZMIANY();
END;

COMMIT;

---146 TYS MYSZY!!!!

DELETE from MYSZY;
COMMIT;
SELECT COUNT(*) FROM MYSZY;
SELECT COUNT(*) FROM MYSZY WHERE ZJADACZ IS NULL;
SELECT COUNT(*) FROM MYSZY WHERE LOWCA IS NULL;
SELECT (PRZYDZIAL_MYSZY + MYSZY_EXTRA)*168 FROM KOCURY WHERE PSEUDO = 'TYGRYS';
SELECT COUNT(NR_MYSZY) FROM MYSZY WHERE ZJADACZ = 'TYGRYS';

SELECT
  PSEUDO,
  COUNT(NR_MYSZY) "ILE JEDZĄ",
  (NVL(PRZYDZIAL_MYSZY,0) + NVL(MYSZY_EXTRA,0)) * MONTHS_BETWEEN('2018-01-11', W_STADKU_OD) "ILE POWINNY"
FROM KOCURY K JOIN MYSZY M ON K.PSEUDO = M.ZJADACZ
GROUP BY K.PSEUDO, PRZYDZIAL_MYSZY, MYSZY_EXTRA, W_STADKU_OD;

SELECT
  SUM(NVL(PRZYDZIAL_MYSZY,0) + NVL(MYSZY_EXTRA,0)) * 168
  FROM KOCURY;

SELECT * FROM MYSZY
WHERE NR_MYSZY < 500
